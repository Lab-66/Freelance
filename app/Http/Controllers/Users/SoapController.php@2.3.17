<?php

namespace App\Http\Controllers\Users;

use App\Http\Controllers\UserController;
use App\Models\Invoice;
use App\Http\Requests;
use Illuminate\Support\Facades\URL;
use \Input as Input;
use DB;
use App\Models\Slider;

class SoapController extends UserController
{
	public function soapSetting(){
		return View('user.soap.index',array('title' => 'Soapkoppeling'));////
	}
	public function soapFactuur(){
			$arr = DB::table("invoices")->get();
			?>
            <strong>LCRM INVOICES</strong>
            <table width="100%" border="2">
            <thead>
            	<td align="center">Invoice ID</td>
                <td align="center">Invoice Date</td>
                <td align="center">Action</td>
            </thead>
            <?php foreach($arr as $eachInvoice){ ?>
				<tbody>
                    <td align="center"><?php echo $eachInvoice->id;?></td>
                    <td align="center"><?php echo $eachInvoice->invoice_date;?></td>
                    <td align="center"><a href="http://93.158.221.197/files/public/update_invoice/<?php echo $eachInvoice->id; ?>">Insert Into Soapkoppeling</a></td>
                </tbody>
			<?php }	?>
            </table><br/><br/><br/>
            <?php
			try
				{
				$client = new \SoapClient("https://soap.e-boekhouden.nl/soap.asmx?WSDL");
				$Username = "megabonuscasino";
				$SecurityCode1 = "e3de80b3fb5c75d41beb73daa0f6b776";
				$SecurityCode2 = "43B7FF4F-44E1-4D30-BB1D-5FAE50AE4905";
				// sessie openen en sessionid ophalen
				$params = array(
								"Username" => $Username,
								"SecurityCode1" => $SecurityCode1,
								"SecurityCode2" => $SecurityCode2
								);
				$response = $client->__soapCall("OpenSession", array($params));
				if(!empty($response->OpenSessionResult->ErrorMsg->LastErrorCode)){
				$this->checkforerror($response, "OpenSessionResult");}
				$SessionID = $response->OpenSessionResult->SessionID;
				//echo "SessionID: " . $SessionID;
				echo "<strong>e-boekhouden invoices</strong>";
				echo "<hr>";
				date_default_timezone_set('UTC');
				$DatumVan = date("2017-03-01") ;
				$DatumTm = date("2017-03-21");
				// opvragen alle grootboekrekeningen van de categorie balans
				/*############################# Get Grootboekrekeningen ###############################*/
				$params = array(
								"SecurityCode2" => $SecurityCode2,
								"SessionID" => $SessionID,
								"cFilter" => array(
											"Factuurnummer" => "",
											"Relatiecode" => "",
											"DatumVan" => $DatumVan,
											"DatumTm" => $DatumTm
											)
				);
				$response = $client->__soapCall("GetFacturen", array($params));
				//print_r($response);
				if(!empty($response->GetFacturenResult->ErrorMsg->LastErrorCode)){
				$this->checkforerror($response, "GetFacturenResult");}
				$Rekeningen = $response->GetFacturenResult->Facturen;
				// indien een resultaat, dan even een array maken
				if(!is_array($Rekeningen->cFactuurList))
				$Rekeningen->cFactuurList = array($Rekeningen->cFactuurList);
				// weergeven van alle 
				//opgehaalde grootboekrekeningen...
				//print_r($Rekeningen);
				echo '<table border="3" width="100%">';
				echo '<tr><th>ID</th><th>Code</th><th>Omschrijving</th>';
				echo '<th>Categorie</th><th>Groep</th></tr>';
				
				foreach ($Rekeningen->cFactuurList as $Rekening) {
						echo '<tr>'; 
						echo '<td>' . $Rekening->Factuurnummer . '</td>';
						echo '<td>' . $Rekening->Relatiecode . '</td>';
						echo '<td>' . $Rekening->TotaalExclBTW . '</td>';
						echo '<td>' . $Rekening->TotaalBTW . '</td>';
						echo '<td>' . $Rekening->TotaalInclBTW . '</td>';
						echo '</tr>';
				}
				echo '</table>';
				// sessie sluiten
				$params = array(
				"SessionID" => $SessionID
				);
				$response = $client->__soapCall("CloseSession", array($params));
				}
		
		catch(SoapFault $soapFault)
		{
		echo '<strong>Er is een fout opgetreden:</strong><br>';
		echo $soapFault;
		}

	}
	
	public function updateFactuur($invoice_id){
		$invoiceDatas = DB::table("invoices")
						->join("invoices_products","invoices.id","=","invoices_products.invoice_id")
						->where("invoices.id","=",$invoice_id)
						->get();
						$id= intval($invoice_id);

		$invoiceProducts = array();
		$i = 0;
		foreach($invoiceDatas as $eachData){
			$invoiceProducts[$i] = array();
			$invoiceProducts[$i]["Aantal"] = $eachData->quantity;
			$invoiceProducts[$i]["Eenheid"] = "stuk";
			$invoiceProducts[$i]["Code"] = '"'.$eachData->product_id.'"';
			$invoiceProducts[$i]["Omschrijving"] = '"'.$eachData->product_name.'"';
			$invoiceProducts[$i]["PrijsPerEenheid"] = $eachData->price;
			$invoiceProducts[$i]["BTWCode"] = "LAAG_VERK";
			$invoiceProducts[$i]["TegenrekeningCode"] = "0130";
			$invoiceProducts[$i]["KostenplaatsID"] = 0;
			$i++;
		}
		
		try
		{
		$client = new \SoapClient("https://soap.e-boekhouden.nl/soap.asmx?WSDL");
		$Username = "megabonuscasino";
		$SecurityCode1 = "e3de80b3fb5c75d41beb73daa0f6b776";
		$SecurityCode2 = "43B7FF4F-44E1-4D30-BB1D-5FAE50AE4905";
		// sessie openen en sessionid ophalen
		$params = array(
						"Username" => $Username,
						"SecurityCode1" => $SecurityCode1,
						"SecurityCode2" => $SecurityCode2
						);
		$response = $client->__soapCall("OpenSession", array($params));
		if(!empty($response->OpenSessionResult->ErrorMsg->LastErrorCode)){
		$this->checkforerror($response, "OpenSessionResult");}
		$SessionID = $response->OpenSessionResult->SessionID;
		echo "SessionID: " . $SessionID;
		echo "<hr>";
		date_default_timezone_set('UTC');
		// get the date
		$startDate = date("Y-m-d") . 'T' . date("H:i:s");
		$addParams = array(
						"SecurityCode2" => $SecurityCode2,
						"SessionID" => $SessionID,
						"oFact" => array(
									"Factuurnummer" => "",
									"Relatiecode" => "R001",
									"Datum" => $startDate,
									"Betalingstermijn" => 20,
									"Factuursjabloon" => "Voorbeeld 1",
									"PerEmailVerzenden" => 0,
									"AutomatischeIncasso" => 0,
									"IncassoMachtigingDatumOndertekening" => $startDate,
									"IncassoMachtigingFirst" => 0,
									"IncassoRekeningNummer" => "sds",
									"InBoekhoudingPlaatsen" => 0,
									"Regels" => array(
												  "cFactuurRegel" => $invoiceProducts		
														
													  )
									
									)
		);
		$addResponse = $client->__soapCall("AddFactuur", array($addParams));
		if(!empty($response->AddFactuurResult->ErrorMsg->LastErrorCode)){
		$this->checkforerror($addResponse, "AddFactuurResult");}
		echo "AddFactuur added successfully";
		
		// sessie sluiten
		$params = array(
		"SessionID" => $SessionID
		);
		$response = $client->__soapCall("CloseSession", array($params));
		}
		
		catch(SoapFault $soapFault)
		{
		echo '<strong>Er is een fout opgetreden:</strong><br>';
		echo $soapFault;
		}
		}
	public function checkforerror($rawresponse, $sub) {
		$LastErrorCode = $rawresponse->$sub->ErrorMsg->LastErrorCode;
		$LastErrorDescription = $rawresponse->$sub->ErrorMsg->LastErrorDescription;
		if($LastErrorCode <> '') {
			echo '<strong>Er is een fo
			ut opgetreden:</strong><br>';
			echo $LastErrorCode . ': ' . $LastErrorDescription;
			exit();
		}
	}
	public function soapRelatie(){
		$users = DB::table('customers')
            ->join('users', 'customers.user_id', '=', 'users.id')
            ->get();
		?>
		<strong>LCRM Client</strong>
            <table width="100%" border="2">
            <thead>
            	<td align="center">Customer ID</td>
                <td align="center">Customer Name</td>
                <td align="center">Action</td>
            </thead>
             <?php foreach($users as $eachCustomer){ ?>
				<tbody>
                    <td align="center"><?php echo $eachCustomer->user_id;?></td>
                    <td align="center"><?php echo $eachCustomer->first_name." ".$eachCustomer->last_name;?></td>
                    <td align="center"><a href="#">Insert Into Soapkoppeling</a></td>
                </tbody>
			<?php }	?>
            </table><br/><br/><br/>
            <strong>SOAPKOPPELING Client</strong>
            <br/><i>API key mismatch</i>
		<?php
	}
}
